_target_: classification.lightning_model.classifier.Classifier

model: ${model}

optimizer:
  _target_: torch.optim.AdamW
  lr: 0.001
  weight_decay: 0.0001

scheduler:
  _target_: torch.optim.lr_scheduler.ReduceLROnPlateau
  mode: min
  factor: 0.1
  patience: 7

criterion:
  _target_: torch.nn.CrossEntropyLoss

metrics:
  _target_: torchmetrics.MetricCollection
  metrics:
    - _target_: torchmetrics.Accuracy
      task: "multiclass"
      average: "macro"
      num_classes: ${datamodule.num_classes}
    - _target_: torchmetrics.F1Score
      task: "multiclass"
      average: "macro"
      num_classes: ${datamodule.num_classes}
    - _target_: torchmetrics.Precision
      task: "multiclass"
      average: "macro"
      num_classes: ${datamodule.num_classes}
    - _target_: torchmetrics.Specificity
      task: "multiclass"
      average: "macro"
      num_classes: ${datamodule.num_classes}

time_window:
  - 10
  - 20
  - 40
time_step:
  - 1
  - 1
  - 1
window_fix: null
monitor: "val/loss"

# compile model for faster training with pytorch 2.0
compile: false
